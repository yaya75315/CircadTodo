{"version":3,"sources":["public/images/calender-n.svg","components/NavBar.js","public/images/workIcon-p.svg","public/images/lightingIcon-n.svg","public/images/settingIcon-n.svg","public/images/workIcon-n.svg","public/images/lightingIcon-p.svg","public/images/settingIcon-p.svg","components/TabBar.js","public/images/arrivehome.svg","components/StatusDisplay.js","components/DayStyle.js","public/images/noteIcon.svg","components/DateWork.js","components/WorkingHour.js","components/WorkingTime.js","components/buildCal.js","public/images/sleeptime.svg","viewpages/HomePage.js","components/ItemLabel.js","viewpages/LightingPage.js","viewpages/SettingPage.js","public/images/closeIcon.svg","public/images/triangle.svg","viewpages/pickerStyles.js","components/DatePicker.js","viewpages/DateSetting.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","title","iconStatus","setNewWorking","className","onClick","src","calenderIcon","alt","TabBar","setTitleState","newWorking","workImg","workIconPress","lightingImg","lightingIconNormal","settingImg","settingIconNormal","lightingTabState","workTabState","settingTabState","useState","workState","setWorkState","lightingState","setLightingState","settingState","setSettingState","workName","setWorkName","lightingName","setLightingName","settingName","setSettingName","history","useHistory","titleChange","router","pre","tmpTitle","workIconNormal","lightingIconPress","console","log","settingIconPress","push","StatusDisplay","iconImg","statusName","time","dayStyle","day","value","hours","undefined","format","isSame","NumStyle","isSelected","Date","isToday","DateWork","backGroundColor","workContent","workHour","index","setOldWorkHour","oldWorkHour","item","h","setHours","language","deleteFlag","setDeleteFlag","cloneEvent","cloneHour","id","noteIcon","splice","i","length","hour","WorkingHour","WorkingTime","calendar","setCalendar","moment","setValue","weeks","list","allHours","useEffect","startDay","clone","startOf","endDay","endOf","subtract","isBefore","Array","fill","map","add","buildCalendar","String","fromCharCode","week","weekday","toString","colorId","name","myWork","HomePage","newNumber","setNewNumber","newInfo","setNewInfo","arriveHome","sleepTime","ItemLabel","itemName","itemContent","setLanguage","languageFlag","setLanguageFlag","optionState","setOptionState","addrtype","Add","selectChange","e","target","onChange","selected","address","key","languageSelector","LightingPage","theme","createMuiTheme","palette","secondary","main","checked","setChecked","FormGroup","ThemeProvider","FormControlLabel","control","Switch","size","prev","color","SettingPage","beforeToday","afterDeadline","deadlineValue","isAfter","oldHour","oldHoursBefore","DatePicker","setHourInput","hourInput","calendarValue","setCalendarValue","numberSize","setNumberSize","triangleOpen","setTriangleOpen","dateSave","setDateSave","newHourStyle","setNewHourStyle","calendarStart","calendarEnd","numberChange","thisMonth","days","a","date","todayDate","d","triangle","type","onInput","placeholder","min","max","onKeyPress","document","getElementById","DateSetting","useStyles","makeStyles","container","display","flexWrap","textField","marginRight","spacing","width","timeStamp","valueOf","nowTime","colorArray","classes","chooseColor","setChooseColor","selectStyle","setSelectStyle","setDeadlineValue","totalNumber","setTotalNumber","alertFlag","setAlertFlag","nameInput","setNameInput","alertNameFlag","setAlertNameFlag","sum","Number","action","method","closeIcon","addEvent","colorList","TextField","defaultValue","InputLabelProps","shrink","InputProps","inputProps","inputmode","deadLineValue","totalHoursValue","App","useLocation","pathname","dataRecord","titleState","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.f3e6ac28.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/calender-n.89033f31.svg\";","import React, { useEffect } from \"react\";\nimport calenderIcon from \"../public/images/calender-n.svg\";\nimport \"../public/css/navBar.css\";\n\nconst NavBar = ({ title, iconStatus, setNewWorking }) => {\n  // useEffect(() => {\n  //   console.log(\"title:\", title);\n  //   return () => {};\n  // }, [title]);\n\n  return (\n    <div className=\"navBarPosition\">\n      <div className=\"navBar\">\n        <h1>{title}</h1>\n        <div\n          className={iconStatus}\n          onClick={() => {\n            setNewWorking(true);\n          }}\n        >\n          <img src={calenderIcon} alt=\"icon\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/workIcon-p.05741dfe.svg\";","export default __webpack_public_path__ + \"static/media/lightingIcon-n.bfee4624.svg\";","export default __webpack_public_path__ + \"static/media/settingIcon-n.3d21876c.svg\";","export default __webpack_public_path__ + \"static/media/workIcon-n.41e6928d.svg\";","export default __webpack_public_path__ + \"static/media/lightingIcon-p.a1e63e71.svg\";","export default __webpack_public_path__ + \"static/media/settingIcon-p.4c784c1b.svg\";","import React, { useState, useEffect } from \"react\";\nimport \"../public/css/tabBar.css\";\nimport workIconPress from \"../public/images/workIcon-p.svg\";\nimport lightingIconNormal from \"../public/images/lightingIcon-n.svg\";\nimport settingIconNormal from \"../public/images/settingIcon-n.svg\";\nimport workIconNormal from \"../public/images/workIcon-n.svg\";\nimport lightingIconPress from \"../public/images/lightingIcon-p.svg\";\nimport settingIconPress from \"../public/images/settingIcon-p.svg\";\n\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nconst TabBar = ({ setTitleState, setNewWorking, newWorking }) => {\n  let workImg = workIconPress;\n  let lightingImg = lightingIconNormal;\n  let settingImg = settingIconNormal;\n  let lightingTabState = \"\";\n  let workTabState = \"\";\n  let settingTabState = \"\";\n\n  const [workState, setWorkState] = useState(workImg);\n  const [lightingState, setLightingState] = useState(lightingImg);\n  const [settingState, setSettingState] = useState(settingImg);\n  const [workName, setWorkName] = useState(\"workTabName\");\n  const [lightingName, setLightingName] = useState(\"normalState\");\n  const [settingName, setSettingName] = useState(\"normalState\");\n\n  const history = useHistory();\n  const titleChange = (router) => {\n    setTitleState((pre) => {\n      let tmpTitle = \"Lighting\";\n      if (router == \"/LightingPage\") {\n        tmpTitle = \"Lighting\";\n      } else if (router == \"/\") {\n        tmpTitle = \"Today\";\n      } else if (router == \"/SettingPage\") {\n        tmpTitle = \"Setting\";\n      }\n      return tmpTitle;\n    });\n    if (router === \"/LightingPage\") {\n      workImg = workIconNormal;\n      lightingImg = lightingIconPress;\n      settingImg = settingIconNormal;\n      console.log(\"settingImg0\");\n      lightingTabState = \"lightingTabName\";\n      workTabState = \"normalState\";\n      settingTabState = \"normalState\";\n    } else if (router === \"/SettingPage\") {\n      workImg = workIconNormal;\n      lightingImg = lightingIconNormal;\n      settingImg = settingIconPress;\n      console.log(\"settingImg1\");\n      settingTabState = \"settingTabName\";\n      lightingTabState = \"normalState\";\n      workTabState = \"normalState\";\n    } else if (router === \"/\") {\n      workImg = workIconPress;\n      lightingImg = lightingIconNormal;\n      settingImg = settingIconNormal;\n      console.log(\"settingImg2\");\n      workTabState = \"workTabName\";\n      lightingTabState = \"normalState\";\n      settingTabState = \"normalState\";\n    }\n    setWorkName(workTabState);\n    setLightingName(lightingTabState);\n    setSettingName(settingTabState);\n    setLightingState(lightingImg);\n    setWorkState(workImg);\n    setSettingState(settingImg);\n    history.push(router);\n  };\n\n  const closeDateWindow = () => {\n    if (newWorking == true) {\n      setNewWorking(false);\n    }\n  };\n\n  return (\n    <div className=\"tabBar\" onClick={closeDateWindow}>\n      <div className=\"workTab\" onClick={() => titleChange(\"/\")}>\n        <img src={workState} alt=\"\" />\n        <div className={workName}>\n          <p>Work</p>\n        </div>\n      </div>\n\n      <div className=\"lightingTab\" onClick={() => titleChange(\"/LightingPage\")}>\n        <img src={lightingState} alt=\"\" />\n        <div className={lightingName}>\n          <p>Lighting</p>\n        </div>\n      </div>\n\n      <div className=\"settingTab\" onClick={() => titleChange(\"/SettingPage\")}>\n        <img src={settingState} alt=\"\" />\n        <div className={settingName}>\n          <p>setting</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TabBar;\n","export default __webpack_public_path__ + \"static/media/arrivehome.f12228d7.svg\";","import React from \"react\";\nimport \"../public/css/statusDisplay.css\";\nimport arriveHome from \"../public/images/arrivehome.svg\";\n\nconst StatusDisplay = ({ iconImg, statusName, time }) => {\n  // const homeIcon = arriveHome;\n  // const statusName =\"Arrive home\"\n  // const time = \"19:30\"\n  return (\n    <div className=\"statusContainer\">\n      <div className=\"statusImg\">\n        <img src={iconImg} alt=\"home\" />\n      </div>\n      <div className=\"statusTime\">\n        <p>{statusName}</p>\n        <p>{time}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StatusDisplay;\n","function isSelected(day, value) {\n  return value.isSame(day, \"day\");\n}\n\nexport function beforeToday(day) {\n  return day.isBefore(new Date(), \"day\");\n}\n\nfunction isToday(day) {\n  return day.isSame(new Date(), \"day\");\n}\n\nfunction NumStyle(day, hours, value) {\n  return (\n    hours[day.format(\"YYYY-MM-DD\")] === undefined && value.isSame(day, \"day\")\n  );\n}\n\nexport default function dayStyle(day, value, hours) {\n  // if (beforeToday(day)) return \"before\";\n  if (NumStyle(day, hours, value)) return \"selectedNull\";\n  if (isSelected(day, value)) return \"selected\";\n  if (isToday(day)) return \"today\";\n\n  return \"\";\n}\n","export default __webpack_public_path__ + \"static/media/noteIcon.c5c4ddae.svg\";","import React, { useState } from \"react\";\nimport \"../public/css/dateWork.css\";\nimport noteIcon from \"../public/images/noteIcon.svg\";\n\nconst DateWork = ({\n  backGroundColor,\n  workContent,\n  workHour,\n  index,\n  setOldWorkHour,\n  oldWorkHour,\n  item,\n  hours,\n  h,\n  setHours,\n  language,\n}) => {\n  const [deleteFlag, setDeleteFlag] = useState(false);\n  const cloneEvent = { ...oldWorkHour };\n  const cloneHour = { ...hours };\n\n  const deleteEvent = () => {\n    cloneEvent[item].splice(index, 1);\n    setOldWorkHour(cloneEvent);\n    console.log(oldWorkHour[item][index]);\n    for (let i = 0; i <= oldWorkHour[item].length; i++) {\n      if (i != oldWorkHour[item].length) {\n        h += oldWorkHour[item][i].hour;\n        cloneHour[item] = h;\n        setHours(cloneHour);\n      } else if (oldWorkHour[item][index] == undefined) {\n        cloneHour[item] = undefined;\n        setHours(cloneHour);\n      } else {\n        h = 0;\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div\n        className=\"workContainer\"\n        id={backGroundColor}\n        onClick={() => {\n          if (deleteFlag == false) {\n            setDeleteFlag(true);\n          } else {\n            setDeleteFlag(false);\n          }\n        }}\n      >\n        <div className=\"workArea\">\n          <div className=\"workImg\">\n            <img src={noteIcon} alt=\"\" />\n          </div>\n          <div className=\"workContent\">\n            <p>{workContent}</p>\n          </div>\n        </div>\n        <div className=\"rightArea\">\n          <div className=\"text\">\n            <p>{workHour}</p>\n            <p>{language == \"English\" ? \"hr\" : \"小時\"}</p>\n          </div>\n          {deleteFlag ? (\n            <div className=\"deleteArea\" onClick={deleteEvent}>\n              X\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DateWork;\n","import React from \"react\";\n\nfunction WorkingHour({ hours, day, language }) {\n  const hourDisplay = () => {\n    if (hours[day.format(\"YYYY-MM-DD\")] == null) {\n      return null;\n    } else {\n      if (language == \"English\") {\n        return \"hr\";\n      } else if (language == \"Chinese\") {\n        return \"小時\";\n      } else {\n        return \"hr\";\n      }\n    }\n  };\n  return (\n    <div>\n      <div className=\"Every-dot\">\n        <div className=\"dot\"></div>\n      </div>\n      <div className=\"day-workHour\">{hours[day.format(\"YYYY-MM-DD\")]}</div>\n      <div className=\"hour\">\n        {/* {hours[day.format(\"YYYY-MM-DD\")] == null ? null : \"hr\"} */}\n        {hourDisplay()}\n      </div>\n    </div>\n  );\n}\n\nexport default WorkingHour;\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport buildCalendar from \"./buildCal\";\n\nimport dayStyle, { beforeToday } from \"./DayStyle\";\nimport DateWork from \"./DateWork\";\nimport WorkingHour from \"./WorkingHour\";\nimport \"../public/css/workingStyle.css\";\nimport \"../public/css/common.css\";\n\nfunction WorkingTime({\n  hours,\n  oldWorkHour,\n  setOldWorkHour,\n  setHours,\n  language,\n}) {\n  const [calendar, setCalendar] = useState([]);\n  const [value, setValue] = useState(moment());\n  const weeks = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\n  let h = 0;\n\n  function currMonthName() {\n    return value.format(\"MMMM\");\n  }\n\n  function currYear() {\n    return value.format(\"YYYY\");\n  }\n\n  function prevMonth() {\n    return value.clone().subtract(1, \"week\");\n  }\n  function nextMonth() {\n    return value.clone().add(1, \"week\");\n  }\n\n  function thisWeek() {\n    return value.isSame(new Date(), \"week\");\n  }\n\n  const todayFormat = () => {\n    return value.format(\"YYYY-MM-DD\");\n  };\n\n  const list = [];\n\n  function myWork() {\n    for (let item in oldWorkHour) {\n      if (todayFormat() == item) {\n        for (let i = 0; i < oldWorkHour[item].length; i++) {\n          list.push(\n            <div>\n              <DateWork\n                backGroundColor={oldWorkHour[item][i].colorId}\n                workContent={oldWorkHour[item][i].name}\n                workHour={oldWorkHour[item][i].hour}\n                index={i}\n                setOldWorkHour={setOldWorkHour}\n                oldWorkHour={oldWorkHour}\n                item={item}\n                hours={hours}\n                h={h}\n                setHours={setHours}\n                language={language}\n              />\n            </div>\n          );\n        }\n      }\n    }\n  }\n\n  function allHours(day) {\n    for (let item in oldWorkHour) {\n      if (day.format(\"YYYY-MM-DD\") == item) {\n        for (let i = 0; i <= oldWorkHour[item].length; i++) {\n          if (i != oldWorkHour[item].length) {\n            h += oldWorkHour[item][i].hour;\n            hours[item] = h;\n          } else {\n            h = 0;\n          }\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    setCalendar(buildCalendar(value));\n  }, [value]);\n\n  return (\n    <div>\n      <div className=\"weekCalendar\">\n        <div className=\"calendar\">\n          <div className=\"header\">\n            <div className=\"previous\" onClick={() => setValue(prevMonth())}>\n              {String.fromCharCode(171)}\n            </div>\n            <div className=\"current\">\n              {currMonthName()}\n              {currYear()}\n            </div>\n            <div className=\"next\" onClick={() => setValue(nextMonth())}>\n              {String.fromCharCode(187)}\n            </div>\n          </div>\n          <div className=\"body\">\n            <div className={\"dayStatus\"}>\n              {calendar.map((week) => (\n                <div className=\"dayContainer\">\n                  {week.map((day) => (\n                    <div onClick={() => setValue(day)}>\n                      {allHours(day)}\n                      <div className=\"day\">\n                        <div className={dayStyle(day, value, hours)}>\n                          <div className=\"day-names\">\n                            <div className=\"week\">\n                              {weeks[day.weekday().toString()]}\n                            </div>\n                          </div>\n                          {day.format(\"D\").toString()}\n\n                          <WorkingHour\n                            hours={hours}\n                            day={day}\n                            language={language}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"dayWork\">\n        <div className=\"marginSpace\"></div>\n        <div className=\"workingSchedule\">\n          {myWork()}\n          {list}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WorkingTime;\n","export default function buildCalendar(value) {\n  const startDay = value.clone().startOf(\"week\"); //這一頁第一週的第一天\n  const endDay = value.clone().endOf(\"week\"); //這一頁最後一週的最後一天\n\n  const day = startDay.clone().subtract(1, \"day\"); //這一頁第一週的第一天減1\n  const calendar = [];\n  while (day.isBefore(endDay, \"day\")) {\n    //isBefore 是用來查詢是否在早於後面的時間\n    //push是將對象推到陣列中\n    calendar.push(\n      Array(7)\n        .fill(0)\n        .map(() => day.add(1, \"day\").clone())\n    );\n  }\n\n  return calendar;\n}\n","export default __webpack_public_path__ + \"static/media/sleeptime.f114bdf4.svg\";","import React from \"react\";\nimport StatusDisplay from \"../components/StatusDisplay\";\nimport WorkingTime from \"../components/WorkingTime\";\nimport \"../public/css/common.css\";\nimport \"../public/css/homePage.css\";\nimport arriveHome from \"../public/images/arrivehome.svg\";\nimport sleepTime from \"../public/images/sleeptime.svg\";\n\nconst HomePage = ({\n  hours,\n  setHours,\n  newNumber,\n  setNewNumber,\n  newInfo,\n  setNewInfo,\n  oldWorkHour,\n  setOldWorkHour,\n  language,\n}) => {\n  return (\n    <div className=\"appContent\">\n      <div className=\"container\">\n        <div className=\"stateArea\">\n          <StatusDisplay\n            iconImg={arriveHome}\n            statusName={language == \"English\" ? \"Arrive time\" : \"到達時間\"}\n            time={\"19:20\"}\n          />\n          <div className=\"spacingBlock\"></div>\n          <StatusDisplay\n            iconImg={sleepTime}\n            statusName={language == \"English\" ? \"Sleep time\" : \"睡覺時間\"}\n            time={\"0:00\"}\n          />\n        </div>\n      </div>\n      <div className=\"calenderArea\">\n        <div className=\"container\">\n          <h2>{language == \"English\" ? \"Working time\" : \"工作時間\"}</h2>\n        </div>\n        {/* <WeekCalender /> */}\n        <WorkingTime\n          hours={hours}\n          setHours={setHours}\n          newNumber={newNumber}\n          setNewNumber={setNewNumber}\n          newInfo={newInfo}\n          setNewInfo={setNewInfo}\n          oldWorkHour={oldWorkHour}\n          setOldWorkHour={setOldWorkHour}\n          language={language}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect } from \"react\";\nimport \"../public/css/itemLabel.css\";\n\nconst ItemLabel = ({ itemName, itemContent, setLanguage }) => {\n  const [languageFlag, setLanguageFlag] = useState(false);\n  const [optionState, setOptionState] = useState(itemContent);\n\n  const [addrtype, setAddrtype] = useState([\"繁體中文\", \"English\"]);\n  const Add = addrtype.map((Add) => Add);\n\n  const languageSelector = () => {\n    if (languageFlag == true) {\n      return (\n        <div className=\"selector\">\n          <select\n            id=\"languageOption\"\n            onChange={selectChange}\n            value={optionState}\n            selected={optionState}\n          >\n            {Add.map((address, key) => (\n              <option id={key} value={address}>\n                {address}\n              </option>\n            ))}\n          </select>\n        </div>\n      );\n    }\n  };\n  const selectChange = (e) => {\n    setLanguage(e.target.value);\n    setOptionState(itemContent);\n    console.log(optionState);\n  };\n  return (\n    <div className={\"itemLabelContent\"}>\n      <div className={\"container\"}>\n        <div className={\"itemContainer\"}>\n          <p>{itemName}</p>\n          <p\n            onClick={() => {\n              if (itemName == \"Language\" || itemName == \"語言\") {\n                setLanguageFlag(true);\n                console.log(languageFlag);\n              }\n            }}\n          >\n            {itemContent}\n          </p>\n          {languageFlag ? languageSelector() : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemLabel;\n","import React, { useState } from \"react\";\nimport ItemLabel from \"../components/ItemLabel\";\nimport \"../public/css/common.css\";\nimport \"../public/css/lightingPage.css\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst LightingPage = ({ language }) => {\n  const theme = createMuiTheme({\n    palette: {\n      secondary: {\n        // This is green.A700 as hex.\n        main: \"#00C8D3\",\n      },\n    },\n  });\n\n  const [checked, setChecked] = useState(false);\n\n  const toggleChecked = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <div className={\"lightingContainer\"}>\n      <div className={\"container\"}>\n        <div className={\"itemContainer\"}>\n          <p>{language == \"English\" ? \"Light Power\" : \"燈光開關\"}</p>\n          <div className={\"switchButton\"}>\n            <FormGroup>\n              <ThemeProvider theme={theme}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      size=\"small\"\n                      checked={checked}\n                      onChange={toggleChecked}\n                      color=\"secondary\"\n                    />\n                  }\n                />\n              </ThemeProvider>\n            </FormGroup>\n          </div>\n        </div>\n      </div>\n\n      <ItemLabel\n        itemName={language == \"English\" ? \"Light CCT\" : \"燈光色溫\"}\n        itemContent={\"6500K\"}\n      />\n      <ItemLabel\n        itemName={language == \"English\" ? \"Light Bright\" : \"燈光亮度\"}\n        itemContent={\"100%\"}\n      />\n      <ItemLabel\n        itemName={language == \"English\" ? \"Next Change\" : \"下一次變換\"}\n        itemContent={\"After 10min\"}\n      />\n    </div>\n  );\n};\n\nexport default LightingPage;\n","import React from \"react\";\nimport ItemLabel from \"../components/ItemLabel\";\nimport \"../public/css/settingPage.css\";\nimport \"../public/css/common.css\";\n\nconst SettingPage = ({ language, setLanguage }) => {\n  const connectState = \"Linked\";\n\n  return (\n    <div className=\"settingPage\">\n      <p className=\"connectState\">{connectState}</p>\n\n      <ItemLabel\n        itemName={language == \"English\" ? \"IP Position\" : \"IP位置\"}\n        itemContent=\"168.137.1.137\"\n      />\n      <ItemLabel\n        itemName={language == \"English\" ? \"Security\" : \"安全協定\"}\n        itemContent=\"HTTPS\"\n      />\n      <ItemLabel\n        itemName={language == \"English\" ? \"Identification\" : \"身份認證\"}\n        itemContent=\"001357SDGXCFE73\"\n      />\n      {/* <ItemLabel itemName=\"SW\" itemContent=\"1937113020\" /> */}\n      <ItemLabel\n        itemName={language == \"English\" ? \"Language\" : \"語言\"}\n        setLanguage={setLanguage}\n        itemContent={language}\n      />\n    </div>\n  );\n};\n\nexport default SettingPage;\n","export default __webpack_public_path__ + \"static/media/closeIcon.e58076b4.svg\";","export default __webpack_public_path__ + \"static/media/triangle.563d527a.svg\";","function isSelected(day, value) {\n  return value.isSame(day, \"day\");\n}\n\nexport function beforeToday(day) {\n  return day.isBefore(new Date(), \"day\");\n}\n\nfunction isToday(day) {\n  return day.isSame(new Date(), \"day\");\n}\n\nfunction oldHoursBefore(day) {\n  return day.isBefore(new Date(), \"day\");\n}\n\nexport function afterDeadline(day, deadlineValue) {\n  return day.isAfter(deadlineValue, \"day\");\n}\n\nexport function oldHour(day, hours) {\n  if (oldHoursBefore(day) && hours[day.format(\"YYYY-MM-DD\")] != null) {\n    return \"oldBefore\";\n  } else if (hours[day.format(\"YYYY-MM-DD\")] == null) {\n    return \"oldHoursNull\";\n  } else {\n    return \"oldHours\";\n  }\n}\n\nexport default function dayStyle(day, value, deadlineValue) {\n  if (beforeToday(day)) return \"before\";\n  if (afterDeadline(day, deadlineValue)) return \"after\";\n  if (isSelected(day, value)) return \"selected\";\n  if (isToday(day)) return \"today\";\n\n  return \"date\";\n}\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport \"../public/css/datePicker.css\";\nimport triangle from \"../public/images/triangle.svg\";\nimport dayStyle, {\n  beforeToday,\n  oldHour,\n  afterDeadline,\n} from \"../viewpages/pickerStyles\";\nconst DatePicker = ({\n  setHourInput,\n  hourInput,\n  deadlineValue,\n  newNumber,\n  setNewNumber,\n  hours,\n  language,\n}) => {\n  const [calendar, setCalendar] = useState([]);\n  const [calendarValue, setCalendarValue] = useState(moment());\n  const [numberSize, setNumberSize] = useState(\"0\");\n  const [triangleOpen, setTriangleOpen] = useState(false);\n\n  const [dateSave, setDateSave] = useState(0);\n  const [newHourStyle, setNewHourStyle] = useState(\"newHoursNull\");\n\n  const calendarStart = calendarValue.clone().startOf(\"month\").startOf(\"week\");\n  const calendarEnd = calendarValue.clone().endOf(\"month\").endOf(\"week\");\n  const todayDate = () => {\n    let date = calendarValue.clone().format(\"YYYY-MM-DD\");\n    setDateSave(date);\n  };\n\n  const numberChange = (e) => {\n    setNumberSize(e.target.value);\n  };\n\n  const currMonthName = () => {\n    return calendarValue.format(\"MMMM\");\n  };\n\n  const currYear = () => {\n    return calendarValue.format(\"YYYY\");\n  };\n\n  const prevMonth = () => {\n    return calendarValue.clone().subtract(1, \"month\");\n  };\n\n  const nextMonth = () => {\n    return calendarValue.clone().add(1, \"month\");\n  };\n\n  const thisMonth = () => {\n    return calendarValue.isSame(new Date(), \"month\");\n  };\n\n  useEffect(() => {\n    const days = calendarStart.clone().subtract(1, \"day\");\n    const a = [];\n    while (days.isBefore(calendarEnd, \"day\")) {\n      a.push(\n        Array(7)\n          .fill(0)\n          .map(() => days.add(1, \"day\").clone())\n      );\n    }\n    todayDate();\n    setCalendar(a);\n  }, [calendarValue]);\n\n  return (\n    <div className=\"calendarPicker\">\n      <div className=\"monthHeader\">\n        <div className=\"current\">{`${currMonthName()} ${currYear()}`}</div>\n        <div className=\"changeButton\">\n          <div\n            className={!thisMonth() ? \"previous\" : \"\"}\n            onClick={() => !thisMonth() && setCalendarValue(prevMonth())}\n          >\n            {!thisMonth() ? String.fromCharCode(171) : null}\n          </div>\n          <div className=\"next\" onClick={() => setCalendarValue(nextMonth())}>\n            {String.fromCharCode(187)}\n          </div>\n        </div>\n      </div>\n      <div className=\"monthCalendar\">\n        <div className=\"dayName\">\n          {[\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"].map((d) => (\n            <div className=\"week\">{d}</div>\n          ))}\n        </div>\n        {calendar.map((week) => (\n          <div className=\"\">\n            {week.map((day) => (\n              <div\n                className=\"day\"\n                onClick={() => {\n                  if (\n                    !beforeToday(day) == true &&\n                    afterDeadline(day, deadlineValue) != true\n                  ) {\n                    setCalendarValue(day);\n                    setHourInput(true);\n                  }\n\n                  setNumberSize(\"\");\n                  setTriangleOpen(true);\n                }}\n              >\n                <div className={dayStyle(day, calendarValue, deadlineValue)}>\n                  {day.format(\"D\").toString()}\n                </div>\n\n                <div className={oldHour(day, hours)}>\n                  {hours[day.format(\"YYYY-MM-DD\")]}\n                </div>\n\n                <div\n                  className={\n                    newNumber[day.format(\"YYYY-MM-DD\")] != null &&\n                    newNumber[day.format(\"YYYY-MM-DD\")] != 0\n                      ? newHourStyle\n                      : \"newHoursNull\"\n                  }\n                >\n                  {newNumber[day.format(\"YYYY-MM-DD\")]}\n                </div>\n\n                <img\n                  className={\n                    calendarValue.isSame(day, \"day\") &&\n                    triangleOpen &&\n                    hourInput\n                      ? \"triangle\"\n                      : \"triangleNone\"\n                  }\n                  src={triangle}\n                />\n              </div>\n            ))}\n\n            <div\n              className={\n                calendarValue.isSame(week[0], \"week\") && hourInput\n                  ? \"hourInput\"\n                  : \"noneInput\"\n              }\n            >\n              <input\n                type=\"number\"\n                id=\"hourInput\"\n                onInput={numberChange}\n                placeholder={\n                  language == \"English\" ? \"Type working hours\" : \"輸入工作時數\"\n                }\n                value={numberSize > 9 && numberSize ? 9 : numberSize}\n                min=\"0\"\n                max=\"9\"\n                onKeyPress={(e) => {\n                  console.log(\"1\");\n                  if (e.key === \"Enter\") {\n                    console.log(\"1\");\n                    setHourInput(false);\n                    setNumberSize(\"\");\n                    setTriangleOpen(false);\n                    if (numberSize > 0) {\n                      setNewHourStyle(\"newHours\");\n                      setNewNumber({\n                        ...newNumber,\n                        [dateSave]: document.getElementById(\"hourInput\").value,\n                      });\n                    } else if (numberSize == 0) {\n                      delete newNumber[dateSave];\n                    }\n                  }\n                }}\n              />\n\n              <input\n                type=\"button\"\n                value={language == \"English\" ? \"OK\" : \"完成\"}\n                onClick={() => {\n                  setHourInput(false);\n                  setNumberSize(\"\");\n                  setTriangleOpen(false);\n                  if (numberSize > 0) {\n                    setNewHourStyle(\"newHours\");\n                    setNewNumber({\n                      ...newNumber,\n                      [dateSave]: document.getElementById(\"hourInput\").value,\n                    });\n                  } else if (numberSize == 0) {\n                    delete newNumber[dateSave];\n                  }\n                }}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DatePicker;\n","import React, { useState, useEffect } from \"react\";\nimport \"../public/css/dateSetting.css\";\nimport \"../public/css/common.css\";\nimport closeIcon from \"../public/images/closeIcon.svg\";\nimport DatePicker from \"../components/DatePicker\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport moment from \"moment\";\n\nconst DateSetting = ({\n  setNewWorking,\n  hours,\n  newNumber,\n  setNewNumber,\n  newInfo,\n  setNewInfo,\n  oldWorkHour,\n  setOldWorkHour,\n  language,\n}) => {\n  //以下是material-ui\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    textField: {\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n  }));\n\n  const timeStamp = moment().valueOf(); //用在material-ui的時間\n  const nowTime = moment(timeStamp).format(\"YYYY-MM-DD\"); //用在material-ui的時間\n  //以上是material-ui\n\n  //----以下是顏色選擇器\n  const colorArray = [\"yellow\", \"blue\", \"green\", \"red\", \"purple\"];\n  const classes = useStyles();\n\n  const [chooseColor, setChooseColor] = useState(\"yellow\");\n  const [selectStyle, setSelectStyle] = useState(false);\n  const [hourInput, setHourInput] = useState(false);\n  const [deadlineValue, setDeadlineValue] = useState(\"\");\n  const [totalNumber, setTotalNumber] = useState(0);\n  const [alertFlag, setAlertFlag] = useState(false);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [alertNameFlag, setAlertNameFlag] = useState(false);\n\n  const closeSelector = () => {\n    if (selectStyle == true) {\n      setSelectStyle(false);\n    }\n  };\n\n  const openSelector = () => {\n    setSelectStyle(true);\n  };\n  //----以上是顏色選擇器\n\n  const deadLineValue = () => document.getElementById(\"datetime-local\").value;\n\n  const totalHoursValue = () => document.getElementById(\"filled-number\").value;\n\n  const [numberSize, setNumberSize] = useState(1);\n\n  const numberChange = (e) => {\n    setNumberSize(e.target.value);\n  };\n\n  const deadlineChange = (e) => {\n    setDeadlineValue(e.target.value);\n  };\n\n  const nameChange = (e) => {\n    setNameInput(e.target.value);\n  };\n\n  function addEvent() {\n    newInfo.name = nameInput;\n    newInfo.colorId = chooseColor;\n    for (let item in newNumber) {\n      let a = {};\n      a.name = newInfo.name;\n      a.hour = Number(newNumber[item]);\n      a.colorId = newInfo.colorId;\n      if (oldWorkHour[item] !== undefined) {\n        setOldWorkHour((e) => ({\n          ...e,\n          [item]: [...e[item], a],\n        }));\n      } else {\n        setOldWorkHour((e) => ({\n          ...e,\n          [item]: [a],\n        }));\n      }\n    }\n  }\n\n  let sum = 0;\n  for (let item in newNumber) {\n    sum += Number(newNumber[item]);\n  }\n\n  const list = [];\n\n  function colorList() {\n    for (let i = 0; i < colorArray.length; i++) {\n      list.push(\n        <div\n          className=\"colorItem\"\n          id={colorArray[i]}\n          onClick={() => setChooseColor(colorArray[i])}\n        ></div>\n      );\n    }\n  }\n\n  useEffect(() => {\n    setTotalNumber(sum);\n  }, [sum]);\n\n  return (\n    <div className=\"dateSetting\" onClick={closeSelector}>\n      <div className=\"container settingContainer\">\n        <form action=\"\" method=\"POST\">\n          <div className=\"dateSettingBar\">\n            <div\n              onClick={() => {\n                setNewWorking(false);\n              }}\n            >\n              <img src={closeIcon} alt=\"\" />\n            </div>\n\n            <div\n              onClick={() => {\n                if (totalNumber != numberSize) {\n                  setAlertFlag(true);\n                } else if (nameInput == \"\") {\n                  setAlertNameFlag(true);\n                } else {\n                  addEvent();\n                  setNewNumber({});\n                  setNewWorking(false);\n                  setTotalNumber(0);\n                  setAlertNameFlag(false);\n                  setAlertFlag(false);\n                }\n              }}\n            >\n              Save\n            </div>\n          </div>\n\n          <div className=\"eventForm\">\n            <div className=\"nameInput\">\n              <input\n                type=\"text\"\n                placeholder={language == \"English\" ? \"New Event\" : \"新事件名稱\"}\n                onChange={nameChange}\n              />\n              {nameInput == 0 && alertNameFlag ? (\n                <div className=\"nameAlert\">*</div>\n              ) : null}\n              <div className=\"colorSelector\" onClick={openSelector}>\n                <div className=\"colorChoose\">\n                  <div\n                    className=\"colorDefaultItem\"\n                    id={chooseColor}\n                    value={chooseColor}\n                  />\n                </div>\n                <div\n                  className={selectStyle == true ? \"colorOption\" : \"noneOption\"}\n                >\n                  {colorList()}\n                  {list}\n                </div>\n              </div>\n            </div>\n            <p>{language == \"English\" ? \"Deadline\" : \"最後期限\"}</p>\n            <div className=\"deadlinePicker\">\n              <TextField\n                id=\"datetime-local\"\n                type=\"date\"\n                defaultValue={nowTime}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={deadlineChange}\n                InputProps={{ inputProps: { min: nowTime } }}\n              />\n            </div>\n            <p>\n              {language == \"English\" ? \"Estimated total hours\" : \"估計總時數\"}\n            </p>\n            <div className=\"hourPicker\">\n              <TextField\n                id=\"filled-number\"\n                placeholder=\"Type total hours\"\n                type=\"number\"\n                size=\"small\"\n                onInput={numberChange}\n                value={numberSize >= 100 ? 100 : numberSize}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputmode=\"numeric\"\n                // onChange={totalChange}\n              />\n            </div>\n\n            <p>\n              {language == \"English\"\n                ? \"Set the working hours of each day\"\n                : \"設定每天的工作時數\"}\n            </p>\n\n            <div className=\"\">\n              <p\n                className=\"\nprompt\"\n              >\n                {language == \"English\"\n                  ? \"Click the date you want to enter the number of days.\"\n                  : \"點擊日期以輸入時數\"}\n              </p>\n              {totalNumber != numberSize && alertFlag ? (\n                <div className=\"alertText\">\n                  {language == \"English\"\n                    ? \"Please enter the correct total hours.\"\n                    : \"請輸入正確的加總時數\"}\n                </div>\n              ) : null}\n              <DatePicker\n                deadLineValue={deadLineValue}\n                totalHoursValue={totalHoursValue}\n                setHourInput={setHourInput}\n                hourInput={hourInput}\n                deadlineValue={deadlineValue}\n                newNumber={newNumber}\n                setNewNumber={setNewNumber}\n                hours={hours}\n                newInfo={newInfo}\n                setNewInfo={setNewInfo}\n                language={language}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default DateSetting;\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport \"./public/css/common.css\";\nimport NavBar from \"./components/NavBar\";\nimport TabBar from \"./components/TabBar\";\n\nimport React, { useState } from \"react\";\n\nimport HomePage from \"./viewpages/HomePage\";\nimport LightingPage from \"./viewpages/LightingPage\";\nimport SettingPage from \"./viewpages/SettingPage\";\nimport DateSetting from \"./viewpages/DateSetting\";\n\nimport {\n  Switch,\n  Route,\n  useLocation,\n  HashRouter,\n  useHistory,\n} from \"react-router-dom\";\n\nimport dataRecord from \"./public/js/data.json\";\n\n// import { useLocation, HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  let location = useLocation();\n  let now_location = location.pathname;\n  let title = \"Today\";\n  const [oldWorkHour, setOldWorkHour] = useState(dataRecord);\n  const [titleState, setTitleState] = useState(title);\n  const [newWorking, setNewWorking] = useState(false);\n  const [newNumber, setNewNumber] = useState({});\n  const [newInfo, setNewInfo] = useState({ name: \"\", colorId: \"\" });\n  const [hours, setHours] = useState({});\n  const [language, setLanguage] = useState(\"English\");\n\n  // const hours = {};\n\n  const iconStatus = titleState != \"Today\" ? \"none\" : \"navBarIcon\";\n  const history = useHistory();\n\n  return (\n    <div className=\"appContainer\">\n      <div className=\"add-newWorking\">\n        {newWorking ? (\n          <DateSetting\n            setNewWorking={setNewWorking}\n            hours={hours}\n            newNumber={newNumber}\n            setNewNumber={setNewNumber}\n            newInfo={newInfo}\n            setNewInfo={setNewInfo}\n            oldWorkHour={oldWorkHour}\n            setOldWorkHour={setOldWorkHour}\n            language={language}\n          />\n        ) : null}\n      </div>\n      <HashRouter>\n        <div className=\"container\">\n          <NavBar\n            title={titleState}\n            iconStatus={iconStatus}\n            setNewWorking={setNewWorking}\n            language={language}\n          />\n        </div>\n\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={() => (\n              <HomePage\n                hours={hours}\n                newNumber={newNumber}\n                setNewNumber={setNewWorking}\n                newInfo={newInfo}\n                setNewInfo={setNewInfo}\n                setHours={setHours}\n                oldWorkHour={oldWorkHour}\n                setOldWorkHour={setOldWorkHour}\n                language={language}\n              />\n            )}\n          />\n          <Route\n            path=\"/LightingPage\"\n            component={() => <LightingPage language={language} />}\n          />\n\n          <Route\n            path=\"/SettingPage\"\n            component={() => (\n              <SettingPage language={language} setLanguage={setLanguage} />\n            )}\n          />\n        </Switch>\n\n        {newWorking ? null : (\n          <TabBar\n            setTitleState={setTitleState}\n            title={title}\n            setNewWorking={setNewWorking}\n            newWorking={newWorking}\n            language={language}\n            setLanguage={setLanguage}\n          />\n        )}\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}